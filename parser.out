Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> block period_token
Rule 2     block -> con_dec var_dec proc_dec stmt
Rule 3     con_dec -> const_token ident_token eql_token number_token con_dec_cdr semicolom_token
Rule 4     con_dec -> empty
Rule 5     con_dec_cdr -> comma_token ident_token eql_token number_token con_dec_cdr
Rule 6     con_dec_cdr -> empty
Rule 7     var_dec -> var_token ident_token var_dec_cdr semicolom_token
Rule 8     var_dec -> empty
Rule 9     var_dec_cdr -> comma_token ident_token var_dec_cdr
Rule 10    var_dec_cdr -> empty
Rule 11    proc_dec -> proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr
Rule 12    proc_dec -> empty
Rule 13    proc_dec_cdr -> proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr
Rule 14    proc_dec_cdr -> empty
Rule 15    stmt -> assign_stmt
Rule 16    stmt -> call_stmt
Rule 17    stmt -> begin_stmt
Rule 18    stmt -> if_stmt
Rule 19    stmt -> while_stmt
Rule 20    stmt -> read_stmt
Rule 21    stmt -> write_stmt
Rule 22    stmt -> empty
Rule 23    assign_stmt -> ident_token become_token expr
Rule 24    call_stmt -> call_token ident_token
Rule 25    begin_stmt -> begin_token stmt begin_stmt_cdr end_token
Rule 26    begin_stmt_cdr -> semicolom_token stmt begin_stmt_cdr
Rule 27    begin_stmt_cdr -> empty
Rule 28    if_stmt -> if_token cond then_token stmt
Rule 29    if_stmt -> if_token cond then_token stmt else_token stmt
Rule 30    while_stmt -> while_token cond do_token stmt
Rule 31    read_stmt -> read_token ident_token
Rule 32    write_stmt -> write_token expr
Rule 33    cond -> odd_token expr
Rule 34    cond -> expr cmp expr
Rule 35    cmp -> eql_token
Rule 36    cmp -> les_token
Rule 37    cmp -> leq_token
Rule 38    cmp -> grt_token
Rule 39    cmp -> geq_token
Rule 40    cmp -> neq_token
Rule 41    expr -> flag no_flag_expr
Rule 42    expr -> no_flag_expr
Rule 43    no_flag_expr -> term plus_token term
Rule 44    no_flag_expr -> term minus_token term
Rule 45    no_flag_expr -> term
Rule 46    flag -> plus_token
Rule 47    flag -> minus_token
Rule 48    term -> factor
Rule 49    term -> factor mul_token term
Rule 50    term -> factor divide_token term
Rule 51    factor -> ident_token
Rule 52    factor -> number_token
Rule 53    factor -> lparent_token expr rparent_token
Rule 54    empty -> <empty>

Terminals, with rules where they appear

become_token         : 23
begin_token          : 25
call_token           : 24
comma_token          : 5 9
const_token          : 3
divide_token         : 50
do_token             : 30
else_token           : 29
end_token            : 25
eql_token            : 3 5 35
error                : 
geq_token            : 39
grt_token            : 38
ident_token          : 3 5 7 9 11 13 23 24 31 51
if_token             : 28 29
leq_token            : 37
les_token            : 36
lparent_token        : 53
minus_token          : 44 47
mul_token            : 49
neq_token            : 40
number_token         : 3 5 52
odd_token            : 33
period_token         : 1
plus_token           : 43 46
proc_token           : 11 13
read_token           : 31
rparent_token        : 53
semicolom_token      : 3 7 11 11 13 13 26
then_token           : 28 29
var_token            : 7
while_token          : 30
write_token          : 32

Nonterminals, with rules where they appear

assign_stmt          : 15
begin_stmt           : 17
begin_stmt_cdr       : 25 26
block                : 1 11 13
call_stmt            : 16
cmp                  : 34
con_dec              : 2
con_dec_cdr          : 3 5
cond                 : 28 29 30
empty                : 4 6 8 10 12 14 22 27
expr                 : 23 32 33 34 34 53
factor               : 48 49 50
flag                 : 41
if_stmt              : 18
no_flag_expr         : 41 42
proc_dec             : 2
proc_dec_cdr         : 11 13
program              : 0
read_stmt            : 20
stmt                 : 2 25 26 28 29 29 30
term                 : 43 43 44 44 45 49 50
var_dec              : 2
var_dec_cdr          : 7 9
while_stmt           : 19
write_stmt           : 21

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . block period_token
    (2) block -> . con_dec var_dec proc_dec stmt
    (3) con_dec -> . const_token ident_token eql_token number_token con_dec_cdr semicolom_token
    (4) con_dec -> . empty
    (54) empty -> .

    const_token     shift and go to state 1
    var_token       reduce using rule 54 (empty -> .)
    proc_token      reduce using rule 54 (empty -> .)
    ident_token     reduce using rule 54 (empty -> .)
    call_token      reduce using rule 54 (empty -> .)
    begin_token     reduce using rule 54 (empty -> .)
    if_token        reduce using rule 54 (empty -> .)
    while_token     reduce using rule 54 (empty -> .)
    read_token      reduce using rule 54 (empty -> .)
    write_token     reduce using rule 54 (empty -> .)
    period_token    reduce using rule 54 (empty -> .)

    program                        shift and go to state 2
    empty                          shift and go to state 3
    con_dec                        shift and go to state 4
    block                          shift and go to state 5

state 1

    (3) con_dec -> const_token . ident_token eql_token number_token con_dec_cdr semicolom_token

    ident_token     shift and go to state 6


state 2

    (0) S' -> program .



state 3

    (4) con_dec -> empty .

    var_token       reduce using rule 4 (con_dec -> empty .)
    proc_token      reduce using rule 4 (con_dec -> empty .)
    ident_token     reduce using rule 4 (con_dec -> empty .)
    call_token      reduce using rule 4 (con_dec -> empty .)
    begin_token     reduce using rule 4 (con_dec -> empty .)
    if_token        reduce using rule 4 (con_dec -> empty .)
    while_token     reduce using rule 4 (con_dec -> empty .)
    read_token      reduce using rule 4 (con_dec -> empty .)
    write_token     reduce using rule 4 (con_dec -> empty .)
    semicolom_token reduce using rule 4 (con_dec -> empty .)
    period_token    reduce using rule 4 (con_dec -> empty .)


state 4

    (2) block -> con_dec . var_dec proc_dec stmt
    (7) var_dec -> . var_token ident_token var_dec_cdr semicolom_token
    (8) var_dec -> . empty
    (54) empty -> .

    var_token       shift and go to state 8
    proc_token      reduce using rule 54 (empty -> .)
    ident_token     reduce using rule 54 (empty -> .)
    call_token      reduce using rule 54 (empty -> .)
    begin_token     reduce using rule 54 (empty -> .)
    if_token        reduce using rule 54 (empty -> .)
    while_token     reduce using rule 54 (empty -> .)
    read_token      reduce using rule 54 (empty -> .)
    write_token     reduce using rule 54 (empty -> .)
    period_token    reduce using rule 54 (empty -> .)
    semicolom_token reduce using rule 54 (empty -> .)

    var_dec                        shift and go to state 7
    empty                          shift and go to state 9

state 5

    (1) program -> block . period_token

    period_token    shift and go to state 10


state 6

    (3) con_dec -> const_token ident_token . eql_token number_token con_dec_cdr semicolom_token

    eql_token       shift and go to state 11


state 7

    (2) block -> con_dec var_dec . proc_dec stmt
    (11) proc_dec -> . proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr
    (12) proc_dec -> . empty
    (54) empty -> .

    proc_token      shift and go to state 12
    ident_token     reduce using rule 54 (empty -> .)
    call_token      reduce using rule 54 (empty -> .)
    begin_token     reduce using rule 54 (empty -> .)
    if_token        reduce using rule 54 (empty -> .)
    while_token     reduce using rule 54 (empty -> .)
    read_token      reduce using rule 54 (empty -> .)
    write_token     reduce using rule 54 (empty -> .)
    period_token    reduce using rule 54 (empty -> .)
    semicolom_token reduce using rule 54 (empty -> .)

    empty                          shift and go to state 13
    proc_dec                       shift and go to state 14

state 8

    (7) var_dec -> var_token . ident_token var_dec_cdr semicolom_token

    ident_token     shift and go to state 15


state 9

    (8) var_dec -> empty .

    proc_token      reduce using rule 8 (var_dec -> empty .)
    ident_token     reduce using rule 8 (var_dec -> empty .)
    call_token      reduce using rule 8 (var_dec -> empty .)
    begin_token     reduce using rule 8 (var_dec -> empty .)
    if_token        reduce using rule 8 (var_dec -> empty .)
    while_token     reduce using rule 8 (var_dec -> empty .)
    read_token      reduce using rule 8 (var_dec -> empty .)
    write_token     reduce using rule 8 (var_dec -> empty .)
    period_token    reduce using rule 8 (var_dec -> empty .)
    semicolom_token reduce using rule 8 (var_dec -> empty .)


state 10

    (1) program -> block period_token .

    $end            reduce using rule 1 (program -> block period_token .)


state 11

    (3) con_dec -> const_token ident_token eql_token . number_token con_dec_cdr semicolom_token

    number_token    shift and go to state 16


state 12

    (11) proc_dec -> proc_token . ident_token semicolom_token block semicolom_token proc_dec_cdr

    ident_token     shift and go to state 17


state 13

    (12) proc_dec -> empty .

    ident_token     reduce using rule 12 (proc_dec -> empty .)
    call_token      reduce using rule 12 (proc_dec -> empty .)
    begin_token     reduce using rule 12 (proc_dec -> empty .)
    if_token        reduce using rule 12 (proc_dec -> empty .)
    while_token     reduce using rule 12 (proc_dec -> empty .)
    read_token      reduce using rule 12 (proc_dec -> empty .)
    write_token     reduce using rule 12 (proc_dec -> empty .)
    period_token    reduce using rule 12 (proc_dec -> empty .)
    semicolom_token reduce using rule 12 (proc_dec -> empty .)


state 14

    (2) block -> con_dec var_dec proc_dec . stmt
    (15) stmt -> . assign_stmt
    (16) stmt -> . call_stmt
    (17) stmt -> . begin_stmt
    (18) stmt -> . if_stmt
    (19) stmt -> . while_stmt
    (20) stmt -> . read_stmt
    (21) stmt -> . write_stmt
    (22) stmt -> . empty
    (23) assign_stmt -> . ident_token become_token expr
    (24) call_stmt -> . call_token ident_token
    (25) begin_stmt -> . begin_token stmt begin_stmt_cdr end_token
    (28) if_stmt -> . if_token cond then_token stmt
    (29) if_stmt -> . if_token cond then_token stmt else_token stmt
    (30) while_stmt -> . while_token cond do_token stmt
    (31) read_stmt -> . read_token ident_token
    (32) write_stmt -> . write_token expr
    (54) empty -> .

    ident_token     shift and go to state 27
    call_token      shift and go to state 32
    begin_token     shift and go to state 20
    if_token        shift and go to state 22
    while_token     shift and go to state 19
    read_token      shift and go to state 30
    write_token     shift and go to state 33
    period_token    reduce using rule 54 (empty -> .)
    semicolom_token reduce using rule 54 (empty -> .)

    write_stmt                     shift and go to state 24
    begin_stmt                     shift and go to state 28
    if_stmt                        shift and go to state 29
    call_stmt                      shift and go to state 25
    read_stmt                      shift and go to state 18
    stmt                           shift and go to state 26
    assign_stmt                    shift and go to state 21
    while_stmt                     shift and go to state 31
    empty                          shift and go to state 23

state 15

    (7) var_dec -> var_token ident_token . var_dec_cdr semicolom_token
    (9) var_dec_cdr -> . comma_token ident_token var_dec_cdr
    (10) var_dec_cdr -> . empty
    (54) empty -> .

    comma_token     shift and go to state 35
    semicolom_token reduce using rule 54 (empty -> .)

    var_dec_cdr                    shift and go to state 34
    empty                          shift and go to state 36

state 16

    (3) con_dec -> const_token ident_token eql_token number_token . con_dec_cdr semicolom_token
    (5) con_dec_cdr -> . comma_token ident_token eql_token number_token con_dec_cdr
    (6) con_dec_cdr -> . empty
    (54) empty -> .

    comma_token     shift and go to state 38
    semicolom_token reduce using rule 54 (empty -> .)

    empty                          shift and go to state 39
    con_dec_cdr                    shift and go to state 37

state 17

    (11) proc_dec -> proc_token ident_token . semicolom_token block semicolom_token proc_dec_cdr

    semicolom_token shift and go to state 40


state 18

    (20) stmt -> read_stmt .

    period_token    reduce using rule 20 (stmt -> read_stmt .)
    semicolom_token reduce using rule 20 (stmt -> read_stmt .)
    end_token       reduce using rule 20 (stmt -> read_stmt .)
    else_token      reduce using rule 20 (stmt -> read_stmt .)


state 19

    (30) while_stmt -> while_token . cond do_token stmt
    (33) cond -> . odd_token expr
    (34) cond -> . expr cmp expr
    (41) expr -> . flag no_flag_expr
    (42) expr -> . no_flag_expr
    (46) flag -> . plus_token
    (47) flag -> . minus_token
    (43) no_flag_expr -> . term plus_token term
    (44) no_flag_expr -> . term minus_token term
    (45) no_flag_expr -> . term
    (48) term -> . factor
    (49) term -> . factor mul_token term
    (50) term -> . factor divide_token term
    (51) factor -> . ident_token
    (52) factor -> . number_token
    (53) factor -> . lparent_token expr rparent_token

    odd_token       shift and go to state 43
    plus_token      shift and go to state 50
    minus_token     shift and go to state 47
    ident_token     shift and go to state 51
    number_token    shift and go to state 52
    lparent_token   shift and go to state 45

    no_flag_expr                   shift and go to state 41
    term                           shift and go to state 42
    expr                           shift and go to state 44
    flag                           shift and go to state 46
    cond                           shift and go to state 48
    factor                         shift and go to state 49

state 20

    (25) begin_stmt -> begin_token . stmt begin_stmt_cdr end_token
    (15) stmt -> . assign_stmt
    (16) stmt -> . call_stmt
    (17) stmt -> . begin_stmt
    (18) stmt -> . if_stmt
    (19) stmt -> . while_stmt
    (20) stmt -> . read_stmt
    (21) stmt -> . write_stmt
    (22) stmt -> . empty
    (23) assign_stmt -> . ident_token become_token expr
    (24) call_stmt -> . call_token ident_token
    (25) begin_stmt -> . begin_token stmt begin_stmt_cdr end_token
    (28) if_stmt -> . if_token cond then_token stmt
    (29) if_stmt -> . if_token cond then_token stmt else_token stmt
    (30) while_stmt -> . while_token cond do_token stmt
    (31) read_stmt -> . read_token ident_token
    (32) write_stmt -> . write_token expr
    (54) empty -> .

    ident_token     shift and go to state 27
    call_token      shift and go to state 32
    begin_token     shift and go to state 20
    if_token        shift and go to state 22
    while_token     shift and go to state 19
    read_token      shift and go to state 30
    write_token     shift and go to state 33
    semicolom_token reduce using rule 54 (empty -> .)
    end_token       reduce using rule 54 (empty -> .)

    write_stmt                     shift and go to state 24
    begin_stmt                     shift and go to state 28
    if_stmt                        shift and go to state 29
    call_stmt                      shift and go to state 25
    read_stmt                      shift and go to state 18
    assign_stmt                    shift and go to state 21
    while_stmt                     shift and go to state 31
    stmt                           shift and go to state 53
    empty                          shift and go to state 23

state 21

    (15) stmt -> assign_stmt .

    period_token    reduce using rule 15 (stmt -> assign_stmt .)
    semicolom_token reduce using rule 15 (stmt -> assign_stmt .)
    end_token       reduce using rule 15 (stmt -> assign_stmt .)
    else_token      reduce using rule 15 (stmt -> assign_stmt .)


state 22

    (28) if_stmt -> if_token . cond then_token stmt
    (29) if_stmt -> if_token . cond then_token stmt else_token stmt
    (33) cond -> . odd_token expr
    (34) cond -> . expr cmp expr
    (41) expr -> . flag no_flag_expr
    (42) expr -> . no_flag_expr
    (46) flag -> . plus_token
    (47) flag -> . minus_token
    (43) no_flag_expr -> . term plus_token term
    (44) no_flag_expr -> . term minus_token term
    (45) no_flag_expr -> . term
    (48) term -> . factor
    (49) term -> . factor mul_token term
    (50) term -> . factor divide_token term
    (51) factor -> . ident_token
    (52) factor -> . number_token
    (53) factor -> . lparent_token expr rparent_token

    odd_token       shift and go to state 43
    plus_token      shift and go to state 50
    minus_token     shift and go to state 47
    ident_token     shift and go to state 51
    number_token    shift and go to state 52
    lparent_token   shift and go to state 45

    no_flag_expr                   shift and go to state 41
    term                           shift and go to state 42
    expr                           shift and go to state 44
    flag                           shift and go to state 46
    cond                           shift and go to state 54
    factor                         shift and go to state 49

state 23

    (22) stmt -> empty .

    period_token    reduce using rule 22 (stmt -> empty .)
    semicolom_token reduce using rule 22 (stmt -> empty .)
    end_token       reduce using rule 22 (stmt -> empty .)
    else_token      reduce using rule 22 (stmt -> empty .)


state 24

    (21) stmt -> write_stmt .

    period_token    reduce using rule 21 (stmt -> write_stmt .)
    semicolom_token reduce using rule 21 (stmt -> write_stmt .)
    end_token       reduce using rule 21 (stmt -> write_stmt .)
    else_token      reduce using rule 21 (stmt -> write_stmt .)


state 25

    (16) stmt -> call_stmt .

    period_token    reduce using rule 16 (stmt -> call_stmt .)
    semicolom_token reduce using rule 16 (stmt -> call_stmt .)
    end_token       reduce using rule 16 (stmt -> call_stmt .)
    else_token      reduce using rule 16 (stmt -> call_stmt .)


state 26

    (2) block -> con_dec var_dec proc_dec stmt .

    semicolom_token reduce using rule 2 (block -> con_dec var_dec proc_dec stmt .)
    period_token    reduce using rule 2 (block -> con_dec var_dec proc_dec stmt .)


state 27

    (23) assign_stmt -> ident_token . become_token expr

    become_token    shift and go to state 55


state 28

    (17) stmt -> begin_stmt .

    period_token    reduce using rule 17 (stmt -> begin_stmt .)
    semicolom_token reduce using rule 17 (stmt -> begin_stmt .)
    end_token       reduce using rule 17 (stmt -> begin_stmt .)
    else_token      reduce using rule 17 (stmt -> begin_stmt .)


state 29

    (18) stmt -> if_stmt .

    period_token    reduce using rule 18 (stmt -> if_stmt .)
    semicolom_token reduce using rule 18 (stmt -> if_stmt .)
    end_token       reduce using rule 18 (stmt -> if_stmt .)
    else_token      reduce using rule 18 (stmt -> if_stmt .)


state 30

    (31) read_stmt -> read_token . ident_token

    ident_token     shift and go to state 56


state 31

    (19) stmt -> while_stmt .

    period_token    reduce using rule 19 (stmt -> while_stmt .)
    semicolom_token reduce using rule 19 (stmt -> while_stmt .)
    end_token       reduce using rule 19 (stmt -> while_stmt .)
    else_token      reduce using rule 19 (stmt -> while_stmt .)


state 32

    (24) call_stmt -> call_token . ident_token

    ident_token     shift and go to state 57


state 33

    (32) write_stmt -> write_token . expr
    (41) expr -> . flag no_flag_expr
    (42) expr -> . no_flag_expr
    (46) flag -> . plus_token
    (47) flag -> . minus_token
    (43) no_flag_expr -> . term plus_token term
    (44) no_flag_expr -> . term minus_token term
    (45) no_flag_expr -> . term
    (48) term -> . factor
    (49) term -> . factor mul_token term
    (50) term -> . factor divide_token term
    (51) factor -> . ident_token
    (52) factor -> . number_token
    (53) factor -> . lparent_token expr rparent_token

    plus_token      shift and go to state 50
    minus_token     shift and go to state 47
    ident_token     shift and go to state 51
    number_token    shift and go to state 52
    lparent_token   shift and go to state 45

    no_flag_expr                   shift and go to state 41
    expr                           shift and go to state 58
    flag                           shift and go to state 46
    term                           shift and go to state 42
    factor                         shift and go to state 49

state 34

    (7) var_dec -> var_token ident_token var_dec_cdr . semicolom_token

    semicolom_token shift and go to state 59


state 35

    (9) var_dec_cdr -> comma_token . ident_token var_dec_cdr

    ident_token     shift and go to state 60


state 36

    (10) var_dec_cdr -> empty .

    semicolom_token reduce using rule 10 (var_dec_cdr -> empty .)


state 37

    (3) con_dec -> const_token ident_token eql_token number_token con_dec_cdr . semicolom_token

    semicolom_token shift and go to state 61


state 38

    (5) con_dec_cdr -> comma_token . ident_token eql_token number_token con_dec_cdr

    ident_token     shift and go to state 62


state 39

    (6) con_dec_cdr -> empty .

    semicolom_token reduce using rule 6 (con_dec_cdr -> empty .)


state 40

    (11) proc_dec -> proc_token ident_token semicolom_token . block semicolom_token proc_dec_cdr
    (2) block -> . con_dec var_dec proc_dec stmt
    (3) con_dec -> . const_token ident_token eql_token number_token con_dec_cdr semicolom_token
    (4) con_dec -> . empty
    (54) empty -> .

    const_token     shift and go to state 1
    var_token       reduce using rule 54 (empty -> .)
    proc_token      reduce using rule 54 (empty -> .)
    ident_token     reduce using rule 54 (empty -> .)
    call_token      reduce using rule 54 (empty -> .)
    begin_token     reduce using rule 54 (empty -> .)
    if_token        reduce using rule 54 (empty -> .)
    while_token     reduce using rule 54 (empty -> .)
    read_token      reduce using rule 54 (empty -> .)
    write_token     reduce using rule 54 (empty -> .)
    semicolom_token reduce using rule 54 (empty -> .)

    empty                          shift and go to state 3
    con_dec                        shift and go to state 4
    block                          shift and go to state 63

state 41

    (42) expr -> no_flag_expr .

    do_token        reduce using rule 42 (expr -> no_flag_expr .)
    then_token      reduce using rule 42 (expr -> no_flag_expr .)
    period_token    reduce using rule 42 (expr -> no_flag_expr .)
    semicolom_token reduce using rule 42 (expr -> no_flag_expr .)
    end_token       reduce using rule 42 (expr -> no_flag_expr .)
    else_token      reduce using rule 42 (expr -> no_flag_expr .)
    rparent_token   reduce using rule 42 (expr -> no_flag_expr .)
    eql_token       reduce using rule 42 (expr -> no_flag_expr .)
    les_token       reduce using rule 42 (expr -> no_flag_expr .)
    leq_token       reduce using rule 42 (expr -> no_flag_expr .)
    grt_token       reduce using rule 42 (expr -> no_flag_expr .)
    geq_token       reduce using rule 42 (expr -> no_flag_expr .)
    neq_token       reduce using rule 42 (expr -> no_flag_expr .)


state 42

    (43) no_flag_expr -> term . plus_token term
    (44) no_flag_expr -> term . minus_token term
    (45) no_flag_expr -> term .

    plus_token      shift and go to state 64
    minus_token     shift and go to state 65
    do_token        reduce using rule 45 (no_flag_expr -> term .)
    then_token      reduce using rule 45 (no_flag_expr -> term .)
    eql_token       reduce using rule 45 (no_flag_expr -> term .)
    les_token       reduce using rule 45 (no_flag_expr -> term .)
    leq_token       reduce using rule 45 (no_flag_expr -> term .)
    grt_token       reduce using rule 45 (no_flag_expr -> term .)
    geq_token       reduce using rule 45 (no_flag_expr -> term .)
    neq_token       reduce using rule 45 (no_flag_expr -> term .)
    period_token    reduce using rule 45 (no_flag_expr -> term .)
    semicolom_token reduce using rule 45 (no_flag_expr -> term .)
    end_token       reduce using rule 45 (no_flag_expr -> term .)
    else_token      reduce using rule 45 (no_flag_expr -> term .)
    rparent_token   reduce using rule 45 (no_flag_expr -> term .)


state 43

    (33) cond -> odd_token . expr
    (41) expr -> . flag no_flag_expr
    (42) expr -> . no_flag_expr
    (46) flag -> . plus_token
    (47) flag -> . minus_token
    (43) no_flag_expr -> . term plus_token term
    (44) no_flag_expr -> . term minus_token term
    (45) no_flag_expr -> . term
    (48) term -> . factor
    (49) term -> . factor mul_token term
    (50) term -> . factor divide_token term
    (51) factor -> . ident_token
    (52) factor -> . number_token
    (53) factor -> . lparent_token expr rparent_token

    plus_token      shift and go to state 50
    minus_token     shift and go to state 47
    ident_token     shift and go to state 51
    number_token    shift and go to state 52
    lparent_token   shift and go to state 45

    no_flag_expr                   shift and go to state 41
    expr                           shift and go to state 66
    flag                           shift and go to state 46
    term                           shift and go to state 42
    factor                         shift and go to state 49

state 44

    (34) cond -> expr . cmp expr
    (35) cmp -> . eql_token
    (36) cmp -> . les_token
    (37) cmp -> . leq_token
    (38) cmp -> . grt_token
    (39) cmp -> . geq_token
    (40) cmp -> . neq_token

    eql_token       shift and go to state 70
    les_token       shift and go to state 71
    leq_token       shift and go to state 67
    grt_token       shift and go to state 68
    geq_token       shift and go to state 69
    neq_token       shift and go to state 72

    cmp                            shift and go to state 73

state 45

    (53) factor -> lparent_token . expr rparent_token
    (41) expr -> . flag no_flag_expr
    (42) expr -> . no_flag_expr
    (46) flag -> . plus_token
    (47) flag -> . minus_token
    (43) no_flag_expr -> . term plus_token term
    (44) no_flag_expr -> . term minus_token term
    (45) no_flag_expr -> . term
    (48) term -> . factor
    (49) term -> . factor mul_token term
    (50) term -> . factor divide_token term
    (51) factor -> . ident_token
    (52) factor -> . number_token
    (53) factor -> . lparent_token expr rparent_token

    plus_token      shift and go to state 50
    minus_token     shift and go to state 47
    ident_token     shift and go to state 51
    number_token    shift and go to state 52
    lparent_token   shift and go to state 45

    no_flag_expr                   shift and go to state 41
    expr                           shift and go to state 74
    flag                           shift and go to state 46
    term                           shift and go to state 42
    factor                         shift and go to state 49

state 46

    (41) expr -> flag . no_flag_expr
    (43) no_flag_expr -> . term plus_token term
    (44) no_flag_expr -> . term minus_token term
    (45) no_flag_expr -> . term
    (48) term -> . factor
    (49) term -> . factor mul_token term
    (50) term -> . factor divide_token term
    (51) factor -> . ident_token
    (52) factor -> . number_token
    (53) factor -> . lparent_token expr rparent_token

    ident_token     shift and go to state 51
    number_token    shift and go to state 52
    lparent_token   shift and go to state 45

    no_flag_expr                   shift and go to state 75
    term                           shift and go to state 42
    factor                         shift and go to state 49

state 47

    (47) flag -> minus_token .

    ident_token     reduce using rule 47 (flag -> minus_token .)
    number_token    reduce using rule 47 (flag -> minus_token .)
    lparent_token   reduce using rule 47 (flag -> minus_token .)


state 48

    (30) while_stmt -> while_token cond . do_token stmt

    do_token        shift and go to state 76


state 49

    (48) term -> factor .
    (49) term -> factor . mul_token term
    (50) term -> factor . divide_token term

    plus_token      reduce using rule 48 (term -> factor .)
    minus_token     reduce using rule 48 (term -> factor .)
    eql_token       reduce using rule 48 (term -> factor .)
    les_token       reduce using rule 48 (term -> factor .)
    leq_token       reduce using rule 48 (term -> factor .)
    grt_token       reduce using rule 48 (term -> factor .)
    geq_token       reduce using rule 48 (term -> factor .)
    neq_token       reduce using rule 48 (term -> factor .)
    rparent_token   reduce using rule 48 (term -> factor .)
    period_token    reduce using rule 48 (term -> factor .)
    semicolom_token reduce using rule 48 (term -> factor .)
    end_token       reduce using rule 48 (term -> factor .)
    else_token      reduce using rule 48 (term -> factor .)
    do_token        reduce using rule 48 (term -> factor .)
    then_token      reduce using rule 48 (term -> factor .)
    mul_token       shift and go to state 77
    divide_token    shift and go to state 78


state 50

    (46) flag -> plus_token .

    ident_token     reduce using rule 46 (flag -> plus_token .)
    number_token    reduce using rule 46 (flag -> plus_token .)
    lparent_token   reduce using rule 46 (flag -> plus_token .)


state 51

    (51) factor -> ident_token .

    mul_token       reduce using rule 51 (factor -> ident_token .)
    divide_token    reduce using rule 51 (factor -> ident_token .)
    plus_token      reduce using rule 51 (factor -> ident_token .)
    minus_token     reduce using rule 51 (factor -> ident_token .)
    period_token    reduce using rule 51 (factor -> ident_token .)
    semicolom_token reduce using rule 51 (factor -> ident_token .)
    end_token       reduce using rule 51 (factor -> ident_token .)
    else_token      reduce using rule 51 (factor -> ident_token .)
    eql_token       reduce using rule 51 (factor -> ident_token .)
    les_token       reduce using rule 51 (factor -> ident_token .)
    leq_token       reduce using rule 51 (factor -> ident_token .)
    grt_token       reduce using rule 51 (factor -> ident_token .)
    geq_token       reduce using rule 51 (factor -> ident_token .)
    neq_token       reduce using rule 51 (factor -> ident_token .)
    do_token        reduce using rule 51 (factor -> ident_token .)
    then_token      reduce using rule 51 (factor -> ident_token .)
    rparent_token   reduce using rule 51 (factor -> ident_token .)


state 52

    (52) factor -> number_token .

    mul_token       reduce using rule 52 (factor -> number_token .)
    divide_token    reduce using rule 52 (factor -> number_token .)
    plus_token      reduce using rule 52 (factor -> number_token .)
    minus_token     reduce using rule 52 (factor -> number_token .)
    period_token    reduce using rule 52 (factor -> number_token .)
    semicolom_token reduce using rule 52 (factor -> number_token .)
    end_token       reduce using rule 52 (factor -> number_token .)
    else_token      reduce using rule 52 (factor -> number_token .)
    eql_token       reduce using rule 52 (factor -> number_token .)
    les_token       reduce using rule 52 (factor -> number_token .)
    leq_token       reduce using rule 52 (factor -> number_token .)
    grt_token       reduce using rule 52 (factor -> number_token .)
    geq_token       reduce using rule 52 (factor -> number_token .)
    neq_token       reduce using rule 52 (factor -> number_token .)
    do_token        reduce using rule 52 (factor -> number_token .)
    then_token      reduce using rule 52 (factor -> number_token .)
    rparent_token   reduce using rule 52 (factor -> number_token .)


state 53

    (25) begin_stmt -> begin_token stmt . begin_stmt_cdr end_token
    (26) begin_stmt_cdr -> . semicolom_token stmt begin_stmt_cdr
    (27) begin_stmt_cdr -> . empty
    (54) empty -> .

    semicolom_token shift and go to state 79
    end_token       reduce using rule 54 (empty -> .)

    empty                          shift and go to state 81
    begin_stmt_cdr                 shift and go to state 80

state 54

    (28) if_stmt -> if_token cond . then_token stmt
    (29) if_stmt -> if_token cond . then_token stmt else_token stmt

    then_token      shift and go to state 82


state 55

    (23) assign_stmt -> ident_token become_token . expr
    (41) expr -> . flag no_flag_expr
    (42) expr -> . no_flag_expr
    (46) flag -> . plus_token
    (47) flag -> . minus_token
    (43) no_flag_expr -> . term plus_token term
    (44) no_flag_expr -> . term minus_token term
    (45) no_flag_expr -> . term
    (48) term -> . factor
    (49) term -> . factor mul_token term
    (50) term -> . factor divide_token term
    (51) factor -> . ident_token
    (52) factor -> . number_token
    (53) factor -> . lparent_token expr rparent_token

    plus_token      shift and go to state 50
    minus_token     shift and go to state 47
    ident_token     shift and go to state 51
    number_token    shift and go to state 52
    lparent_token   shift and go to state 45

    no_flag_expr                   shift and go to state 41
    expr                           shift and go to state 83
    flag                           shift and go to state 46
    term                           shift and go to state 42
    factor                         shift and go to state 49

state 56

    (31) read_stmt -> read_token ident_token .

    period_token    reduce using rule 31 (read_stmt -> read_token ident_token .)
    semicolom_token reduce using rule 31 (read_stmt -> read_token ident_token .)
    end_token       reduce using rule 31 (read_stmt -> read_token ident_token .)
    else_token      reduce using rule 31 (read_stmt -> read_token ident_token .)


state 57

    (24) call_stmt -> call_token ident_token .

    period_token    reduce using rule 24 (call_stmt -> call_token ident_token .)
    semicolom_token reduce using rule 24 (call_stmt -> call_token ident_token .)
    end_token       reduce using rule 24 (call_stmt -> call_token ident_token .)
    else_token      reduce using rule 24 (call_stmt -> call_token ident_token .)


state 58

    (32) write_stmt -> write_token expr .

    semicolom_token reduce using rule 32 (write_stmt -> write_token expr .)
    end_token       reduce using rule 32 (write_stmt -> write_token expr .)
    period_token    reduce using rule 32 (write_stmt -> write_token expr .)
    else_token      reduce using rule 32 (write_stmt -> write_token expr .)


state 59

    (7) var_dec -> var_token ident_token var_dec_cdr semicolom_token .

    proc_token      reduce using rule 7 (var_dec -> var_token ident_token var_dec_cdr semicolom_token .)
    ident_token     reduce using rule 7 (var_dec -> var_token ident_token var_dec_cdr semicolom_token .)
    call_token      reduce using rule 7 (var_dec -> var_token ident_token var_dec_cdr semicolom_token .)
    begin_token     reduce using rule 7 (var_dec -> var_token ident_token var_dec_cdr semicolom_token .)
    if_token        reduce using rule 7 (var_dec -> var_token ident_token var_dec_cdr semicolom_token .)
    while_token     reduce using rule 7 (var_dec -> var_token ident_token var_dec_cdr semicolom_token .)
    read_token      reduce using rule 7 (var_dec -> var_token ident_token var_dec_cdr semicolom_token .)
    write_token     reduce using rule 7 (var_dec -> var_token ident_token var_dec_cdr semicolom_token .)
    period_token    reduce using rule 7 (var_dec -> var_token ident_token var_dec_cdr semicolom_token .)
    semicolom_token reduce using rule 7 (var_dec -> var_token ident_token var_dec_cdr semicolom_token .)


state 60

    (9) var_dec_cdr -> comma_token ident_token . var_dec_cdr
    (9) var_dec_cdr -> . comma_token ident_token var_dec_cdr
    (10) var_dec_cdr -> . empty
    (54) empty -> .

    comma_token     shift and go to state 35
    semicolom_token reduce using rule 54 (empty -> .)

    var_dec_cdr                    shift and go to state 84
    empty                          shift and go to state 36

state 61

    (3) con_dec -> const_token ident_token eql_token number_token con_dec_cdr semicolom_token .

    var_token       reduce using rule 3 (con_dec -> const_token ident_token eql_token number_token con_dec_cdr semicolom_token .)
    proc_token      reduce using rule 3 (con_dec -> const_token ident_token eql_token number_token con_dec_cdr semicolom_token .)
    ident_token     reduce using rule 3 (con_dec -> const_token ident_token eql_token number_token con_dec_cdr semicolom_token .)
    call_token      reduce using rule 3 (con_dec -> const_token ident_token eql_token number_token con_dec_cdr semicolom_token .)
    begin_token     reduce using rule 3 (con_dec -> const_token ident_token eql_token number_token con_dec_cdr semicolom_token .)
    if_token        reduce using rule 3 (con_dec -> const_token ident_token eql_token number_token con_dec_cdr semicolom_token .)
    while_token     reduce using rule 3 (con_dec -> const_token ident_token eql_token number_token con_dec_cdr semicolom_token .)
    read_token      reduce using rule 3 (con_dec -> const_token ident_token eql_token number_token con_dec_cdr semicolom_token .)
    write_token     reduce using rule 3 (con_dec -> const_token ident_token eql_token number_token con_dec_cdr semicolom_token .)
    semicolom_token reduce using rule 3 (con_dec -> const_token ident_token eql_token number_token con_dec_cdr semicolom_token .)
    period_token    reduce using rule 3 (con_dec -> const_token ident_token eql_token number_token con_dec_cdr semicolom_token .)


state 62

    (5) con_dec_cdr -> comma_token ident_token . eql_token number_token con_dec_cdr

    eql_token       shift and go to state 85


state 63

    (11) proc_dec -> proc_token ident_token semicolom_token block . semicolom_token proc_dec_cdr

    semicolom_token shift and go to state 86


state 64

    (43) no_flag_expr -> term plus_token . term
    (48) term -> . factor
    (49) term -> . factor mul_token term
    (50) term -> . factor divide_token term
    (51) factor -> . ident_token
    (52) factor -> . number_token
    (53) factor -> . lparent_token expr rparent_token

    ident_token     shift and go to state 51
    number_token    shift and go to state 52
    lparent_token   shift and go to state 45

    term                           shift and go to state 87
    factor                         shift and go to state 49

state 65

    (44) no_flag_expr -> term minus_token . term
    (48) term -> . factor
    (49) term -> . factor mul_token term
    (50) term -> . factor divide_token term
    (51) factor -> . ident_token
    (52) factor -> . number_token
    (53) factor -> . lparent_token expr rparent_token

    ident_token     shift and go to state 51
    number_token    shift and go to state 52
    lparent_token   shift and go to state 45

    term                           shift and go to state 88
    factor                         shift and go to state 49

state 66

    (33) cond -> odd_token expr .

    do_token        reduce using rule 33 (cond -> odd_token expr .)
    then_token      reduce using rule 33 (cond -> odd_token expr .)


state 67

    (37) cmp -> leq_token .

    plus_token      reduce using rule 37 (cmp -> leq_token .)
    minus_token     reduce using rule 37 (cmp -> leq_token .)
    ident_token     reduce using rule 37 (cmp -> leq_token .)
    number_token    reduce using rule 37 (cmp -> leq_token .)
    lparent_token   reduce using rule 37 (cmp -> leq_token .)


state 68

    (38) cmp -> grt_token .

    plus_token      reduce using rule 38 (cmp -> grt_token .)
    minus_token     reduce using rule 38 (cmp -> grt_token .)
    ident_token     reduce using rule 38 (cmp -> grt_token .)
    number_token    reduce using rule 38 (cmp -> grt_token .)
    lparent_token   reduce using rule 38 (cmp -> grt_token .)


state 69

    (39) cmp -> geq_token .

    plus_token      reduce using rule 39 (cmp -> geq_token .)
    minus_token     reduce using rule 39 (cmp -> geq_token .)
    ident_token     reduce using rule 39 (cmp -> geq_token .)
    number_token    reduce using rule 39 (cmp -> geq_token .)
    lparent_token   reduce using rule 39 (cmp -> geq_token .)


state 70

    (35) cmp -> eql_token .

    plus_token      reduce using rule 35 (cmp -> eql_token .)
    minus_token     reduce using rule 35 (cmp -> eql_token .)
    ident_token     reduce using rule 35 (cmp -> eql_token .)
    number_token    reduce using rule 35 (cmp -> eql_token .)
    lparent_token   reduce using rule 35 (cmp -> eql_token .)


state 71

    (36) cmp -> les_token .

    plus_token      reduce using rule 36 (cmp -> les_token .)
    minus_token     reduce using rule 36 (cmp -> les_token .)
    ident_token     reduce using rule 36 (cmp -> les_token .)
    number_token    reduce using rule 36 (cmp -> les_token .)
    lparent_token   reduce using rule 36 (cmp -> les_token .)


state 72

    (40) cmp -> neq_token .

    plus_token      reduce using rule 40 (cmp -> neq_token .)
    minus_token     reduce using rule 40 (cmp -> neq_token .)
    ident_token     reduce using rule 40 (cmp -> neq_token .)
    number_token    reduce using rule 40 (cmp -> neq_token .)
    lparent_token   reduce using rule 40 (cmp -> neq_token .)


state 73

    (34) cond -> expr cmp . expr
    (41) expr -> . flag no_flag_expr
    (42) expr -> . no_flag_expr
    (46) flag -> . plus_token
    (47) flag -> . minus_token
    (43) no_flag_expr -> . term plus_token term
    (44) no_flag_expr -> . term minus_token term
    (45) no_flag_expr -> . term
    (48) term -> . factor
    (49) term -> . factor mul_token term
    (50) term -> . factor divide_token term
    (51) factor -> . ident_token
    (52) factor -> . number_token
    (53) factor -> . lparent_token expr rparent_token

    plus_token      shift and go to state 50
    minus_token     shift and go to state 47
    ident_token     shift and go to state 51
    number_token    shift and go to state 52
    lparent_token   shift and go to state 45

    no_flag_expr                   shift and go to state 41
    term                           shift and go to state 42
    expr                           shift and go to state 89
    flag                           shift and go to state 46
    factor                         shift and go to state 49

state 74

    (53) factor -> lparent_token expr . rparent_token

    rparent_token   shift and go to state 90


state 75

    (41) expr -> flag no_flag_expr .

    do_token        reduce using rule 41 (expr -> flag no_flag_expr .)
    then_token      reduce using rule 41 (expr -> flag no_flag_expr .)
    period_token    reduce using rule 41 (expr -> flag no_flag_expr .)
    semicolom_token reduce using rule 41 (expr -> flag no_flag_expr .)
    end_token       reduce using rule 41 (expr -> flag no_flag_expr .)
    else_token      reduce using rule 41 (expr -> flag no_flag_expr .)
    rparent_token   reduce using rule 41 (expr -> flag no_flag_expr .)
    eql_token       reduce using rule 41 (expr -> flag no_flag_expr .)
    les_token       reduce using rule 41 (expr -> flag no_flag_expr .)
    leq_token       reduce using rule 41 (expr -> flag no_flag_expr .)
    grt_token       reduce using rule 41 (expr -> flag no_flag_expr .)
    geq_token       reduce using rule 41 (expr -> flag no_flag_expr .)
    neq_token       reduce using rule 41 (expr -> flag no_flag_expr .)


state 76

    (30) while_stmt -> while_token cond do_token . stmt
    (15) stmt -> . assign_stmt
    (16) stmt -> . call_stmt
    (17) stmt -> . begin_stmt
    (18) stmt -> . if_stmt
    (19) stmt -> . while_stmt
    (20) stmt -> . read_stmt
    (21) stmt -> . write_stmt
    (22) stmt -> . empty
    (23) assign_stmt -> . ident_token become_token expr
    (24) call_stmt -> . call_token ident_token
    (25) begin_stmt -> . begin_token stmt begin_stmt_cdr end_token
    (28) if_stmt -> . if_token cond then_token stmt
    (29) if_stmt -> . if_token cond then_token stmt else_token stmt
    (30) while_stmt -> . while_token cond do_token stmt
    (31) read_stmt -> . read_token ident_token
    (32) write_stmt -> . write_token expr
    (54) empty -> .

    ident_token     shift and go to state 27
    call_token      shift and go to state 32
    begin_token     shift and go to state 20
    if_token        shift and go to state 22
    while_token     shift and go to state 19
    read_token      shift and go to state 30
    write_token     shift and go to state 33
    period_token    reduce using rule 54 (empty -> .)
    semicolom_token reduce using rule 54 (empty -> .)
    end_token       reduce using rule 54 (empty -> .)
    else_token      reduce using rule 54 (empty -> .)

    write_stmt                     shift and go to state 24
    begin_stmt                     shift and go to state 28
    if_stmt                        shift and go to state 29
    call_stmt                      shift and go to state 25
    read_stmt                      shift and go to state 18
    stmt                           shift and go to state 91
    assign_stmt                    shift and go to state 21
    while_stmt                     shift and go to state 31
    empty                          shift and go to state 23

state 77

    (49) term -> factor mul_token . term
    (48) term -> . factor
    (49) term -> . factor mul_token term
    (50) term -> . factor divide_token term
    (51) factor -> . ident_token
    (52) factor -> . number_token
    (53) factor -> . lparent_token expr rparent_token

    ident_token     shift and go to state 51
    number_token    shift and go to state 52
    lparent_token   shift and go to state 45

    term                           shift and go to state 92
    factor                         shift and go to state 49

state 78

    (50) term -> factor divide_token . term
    (48) term -> . factor
    (49) term -> . factor mul_token term
    (50) term -> . factor divide_token term
    (51) factor -> . ident_token
    (52) factor -> . number_token
    (53) factor -> . lparent_token expr rparent_token

    ident_token     shift and go to state 51
    number_token    shift and go to state 52
    lparent_token   shift and go to state 45

    term                           shift and go to state 93
    factor                         shift and go to state 49

state 79

    (26) begin_stmt_cdr -> semicolom_token . stmt begin_stmt_cdr
    (15) stmt -> . assign_stmt
    (16) stmt -> . call_stmt
    (17) stmt -> . begin_stmt
    (18) stmt -> . if_stmt
    (19) stmt -> . while_stmt
    (20) stmt -> . read_stmt
    (21) stmt -> . write_stmt
    (22) stmt -> . empty
    (23) assign_stmt -> . ident_token become_token expr
    (24) call_stmt -> . call_token ident_token
    (25) begin_stmt -> . begin_token stmt begin_stmt_cdr end_token
    (28) if_stmt -> . if_token cond then_token stmt
    (29) if_stmt -> . if_token cond then_token stmt else_token stmt
    (30) while_stmt -> . while_token cond do_token stmt
    (31) read_stmt -> . read_token ident_token
    (32) write_stmt -> . write_token expr
    (54) empty -> .

    ident_token     shift and go to state 27
    call_token      shift and go to state 32
    begin_token     shift and go to state 20
    if_token        shift and go to state 22
    while_token     shift and go to state 19
    read_token      shift and go to state 30
    write_token     shift and go to state 33
    semicolom_token reduce using rule 54 (empty -> .)
    end_token       reduce using rule 54 (empty -> .)

    write_stmt                     shift and go to state 24
    begin_stmt                     shift and go to state 28
    if_stmt                        shift and go to state 29
    call_stmt                      shift and go to state 25
    read_stmt                      shift and go to state 18
    assign_stmt                    shift and go to state 21
    while_stmt                     shift and go to state 31
    stmt                           shift and go to state 94
    empty                          shift and go to state 23

state 80

    (25) begin_stmt -> begin_token stmt begin_stmt_cdr . end_token

    end_token       shift and go to state 95


state 81

    (27) begin_stmt_cdr -> empty .

    end_token       reduce using rule 27 (begin_stmt_cdr -> empty .)


state 82

    (28) if_stmt -> if_token cond then_token . stmt
    (29) if_stmt -> if_token cond then_token . stmt else_token stmt
    (15) stmt -> . assign_stmt
    (16) stmt -> . call_stmt
    (17) stmt -> . begin_stmt
    (18) stmt -> . if_stmt
    (19) stmt -> . while_stmt
    (20) stmt -> . read_stmt
    (21) stmt -> . write_stmt
    (22) stmt -> . empty
    (23) assign_stmt -> . ident_token become_token expr
    (24) call_stmt -> . call_token ident_token
    (25) begin_stmt -> . begin_token stmt begin_stmt_cdr end_token
    (28) if_stmt -> . if_token cond then_token stmt
    (29) if_stmt -> . if_token cond then_token stmt else_token stmt
    (30) while_stmt -> . while_token cond do_token stmt
    (31) read_stmt -> . read_token ident_token
    (32) write_stmt -> . write_token expr
    (54) empty -> .

    ident_token     shift and go to state 27
    call_token      shift and go to state 32
    begin_token     shift and go to state 20
    if_token        shift and go to state 22
    while_token     shift and go to state 19
    read_token      shift and go to state 30
    write_token     shift and go to state 33
    period_token    reduce using rule 54 (empty -> .)
    semicolom_token reduce using rule 54 (empty -> .)
    end_token       reduce using rule 54 (empty -> .)
    else_token      reduce using rule 54 (empty -> .)

    write_stmt                     shift and go to state 24
    begin_stmt                     shift and go to state 28
    if_stmt                        shift and go to state 29
    call_stmt                      shift and go to state 25
    read_stmt                      shift and go to state 18
    stmt                           shift and go to state 96
    assign_stmt                    shift and go to state 21
    while_stmt                     shift and go to state 31
    empty                          shift and go to state 23

state 83

    (23) assign_stmt -> ident_token become_token expr .

    period_token    reduce using rule 23 (assign_stmt -> ident_token become_token expr .)
    semicolom_token reduce using rule 23 (assign_stmt -> ident_token become_token expr .)
    end_token       reduce using rule 23 (assign_stmt -> ident_token become_token expr .)
    else_token      reduce using rule 23 (assign_stmt -> ident_token become_token expr .)


state 84

    (9) var_dec_cdr -> comma_token ident_token var_dec_cdr .

    semicolom_token reduce using rule 9 (var_dec_cdr -> comma_token ident_token var_dec_cdr .)


state 85

    (5) con_dec_cdr -> comma_token ident_token eql_token . number_token con_dec_cdr

    number_token    shift and go to state 97


state 86

    (11) proc_dec -> proc_token ident_token semicolom_token block semicolom_token . proc_dec_cdr
    (13) proc_dec_cdr -> . proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr
    (14) proc_dec_cdr -> . empty
    (54) empty -> .

    proc_token      shift and go to state 98
    ident_token     reduce using rule 54 (empty -> .)
    call_token      reduce using rule 54 (empty -> .)
    begin_token     reduce using rule 54 (empty -> .)
    if_token        reduce using rule 54 (empty -> .)
    while_token     reduce using rule 54 (empty -> .)
    read_token      reduce using rule 54 (empty -> .)
    write_token     reduce using rule 54 (empty -> .)
    period_token    reduce using rule 54 (empty -> .)
    semicolom_token reduce using rule 54 (empty -> .)

    empty                          shift and go to state 100
    proc_dec_cdr                   shift and go to state 99

state 87

    (43) no_flag_expr -> term plus_token term .

    do_token        reduce using rule 43 (no_flag_expr -> term plus_token term .)
    then_token      reduce using rule 43 (no_flag_expr -> term plus_token term .)
    eql_token       reduce using rule 43 (no_flag_expr -> term plus_token term .)
    les_token       reduce using rule 43 (no_flag_expr -> term plus_token term .)
    leq_token       reduce using rule 43 (no_flag_expr -> term plus_token term .)
    grt_token       reduce using rule 43 (no_flag_expr -> term plus_token term .)
    geq_token       reduce using rule 43 (no_flag_expr -> term plus_token term .)
    neq_token       reduce using rule 43 (no_flag_expr -> term plus_token term .)
    period_token    reduce using rule 43 (no_flag_expr -> term plus_token term .)
    semicolom_token reduce using rule 43 (no_flag_expr -> term plus_token term .)
    end_token       reduce using rule 43 (no_flag_expr -> term plus_token term .)
    else_token      reduce using rule 43 (no_flag_expr -> term plus_token term .)
    rparent_token   reduce using rule 43 (no_flag_expr -> term plus_token term .)


state 88

    (44) no_flag_expr -> term minus_token term .

    do_token        reduce using rule 44 (no_flag_expr -> term minus_token term .)
    then_token      reduce using rule 44 (no_flag_expr -> term minus_token term .)
    eql_token       reduce using rule 44 (no_flag_expr -> term minus_token term .)
    les_token       reduce using rule 44 (no_flag_expr -> term minus_token term .)
    leq_token       reduce using rule 44 (no_flag_expr -> term minus_token term .)
    grt_token       reduce using rule 44 (no_flag_expr -> term minus_token term .)
    geq_token       reduce using rule 44 (no_flag_expr -> term minus_token term .)
    neq_token       reduce using rule 44 (no_flag_expr -> term minus_token term .)
    period_token    reduce using rule 44 (no_flag_expr -> term minus_token term .)
    semicolom_token reduce using rule 44 (no_flag_expr -> term minus_token term .)
    end_token       reduce using rule 44 (no_flag_expr -> term minus_token term .)
    else_token      reduce using rule 44 (no_flag_expr -> term minus_token term .)
    rparent_token   reduce using rule 44 (no_flag_expr -> term minus_token term .)


state 89

    (34) cond -> expr cmp expr .

    do_token        reduce using rule 34 (cond -> expr cmp expr .)
    then_token      reduce using rule 34 (cond -> expr cmp expr .)


state 90

    (53) factor -> lparent_token expr rparent_token .

    mul_token       reduce using rule 53 (factor -> lparent_token expr rparent_token .)
    divide_token    reduce using rule 53 (factor -> lparent_token expr rparent_token .)
    plus_token      reduce using rule 53 (factor -> lparent_token expr rparent_token .)
    minus_token     reduce using rule 53 (factor -> lparent_token expr rparent_token .)
    period_token    reduce using rule 53 (factor -> lparent_token expr rparent_token .)
    semicolom_token reduce using rule 53 (factor -> lparent_token expr rparent_token .)
    end_token       reduce using rule 53 (factor -> lparent_token expr rparent_token .)
    else_token      reduce using rule 53 (factor -> lparent_token expr rparent_token .)
    eql_token       reduce using rule 53 (factor -> lparent_token expr rparent_token .)
    les_token       reduce using rule 53 (factor -> lparent_token expr rparent_token .)
    leq_token       reduce using rule 53 (factor -> lparent_token expr rparent_token .)
    grt_token       reduce using rule 53 (factor -> lparent_token expr rparent_token .)
    geq_token       reduce using rule 53 (factor -> lparent_token expr rparent_token .)
    neq_token       reduce using rule 53 (factor -> lparent_token expr rparent_token .)
    do_token        reduce using rule 53 (factor -> lparent_token expr rparent_token .)
    then_token      reduce using rule 53 (factor -> lparent_token expr rparent_token .)
    rparent_token   reduce using rule 53 (factor -> lparent_token expr rparent_token .)


state 91

    (30) while_stmt -> while_token cond do_token stmt .

    period_token    reduce using rule 30 (while_stmt -> while_token cond do_token stmt .)
    semicolom_token reduce using rule 30 (while_stmt -> while_token cond do_token stmt .)
    end_token       reduce using rule 30 (while_stmt -> while_token cond do_token stmt .)
    else_token      reduce using rule 30 (while_stmt -> while_token cond do_token stmt .)


state 92

    (49) term -> factor mul_token term .

    plus_token      reduce using rule 49 (term -> factor mul_token term .)
    minus_token     reduce using rule 49 (term -> factor mul_token term .)
    eql_token       reduce using rule 49 (term -> factor mul_token term .)
    les_token       reduce using rule 49 (term -> factor mul_token term .)
    leq_token       reduce using rule 49 (term -> factor mul_token term .)
    grt_token       reduce using rule 49 (term -> factor mul_token term .)
    geq_token       reduce using rule 49 (term -> factor mul_token term .)
    neq_token       reduce using rule 49 (term -> factor mul_token term .)
    rparent_token   reduce using rule 49 (term -> factor mul_token term .)
    period_token    reduce using rule 49 (term -> factor mul_token term .)
    semicolom_token reduce using rule 49 (term -> factor mul_token term .)
    end_token       reduce using rule 49 (term -> factor mul_token term .)
    else_token      reduce using rule 49 (term -> factor mul_token term .)
    do_token        reduce using rule 49 (term -> factor mul_token term .)
    then_token      reduce using rule 49 (term -> factor mul_token term .)


state 93

    (50) term -> factor divide_token term .

    plus_token      reduce using rule 50 (term -> factor divide_token term .)
    minus_token     reduce using rule 50 (term -> factor divide_token term .)
    eql_token       reduce using rule 50 (term -> factor divide_token term .)
    les_token       reduce using rule 50 (term -> factor divide_token term .)
    leq_token       reduce using rule 50 (term -> factor divide_token term .)
    grt_token       reduce using rule 50 (term -> factor divide_token term .)
    geq_token       reduce using rule 50 (term -> factor divide_token term .)
    neq_token       reduce using rule 50 (term -> factor divide_token term .)
    rparent_token   reduce using rule 50 (term -> factor divide_token term .)
    period_token    reduce using rule 50 (term -> factor divide_token term .)
    semicolom_token reduce using rule 50 (term -> factor divide_token term .)
    end_token       reduce using rule 50 (term -> factor divide_token term .)
    else_token      reduce using rule 50 (term -> factor divide_token term .)
    do_token        reduce using rule 50 (term -> factor divide_token term .)
    then_token      reduce using rule 50 (term -> factor divide_token term .)


state 94

    (26) begin_stmt_cdr -> semicolom_token stmt . begin_stmt_cdr
    (26) begin_stmt_cdr -> . semicolom_token stmt begin_stmt_cdr
    (27) begin_stmt_cdr -> . empty
    (54) empty -> .

    semicolom_token shift and go to state 79
    end_token       reduce using rule 54 (empty -> .)

    empty                          shift and go to state 81
    begin_stmt_cdr                 shift and go to state 101

state 95

    (25) begin_stmt -> begin_token stmt begin_stmt_cdr end_token .

    semicolom_token reduce using rule 25 (begin_stmt -> begin_token stmt begin_stmt_cdr end_token .)
    end_token       reduce using rule 25 (begin_stmt -> begin_token stmt begin_stmt_cdr end_token .)
    period_token    reduce using rule 25 (begin_stmt -> begin_token stmt begin_stmt_cdr end_token .)
    else_token      reduce using rule 25 (begin_stmt -> begin_token stmt begin_stmt_cdr end_token .)


state 96

    (28) if_stmt -> if_token cond then_token stmt .
    (29) if_stmt -> if_token cond then_token stmt . else_token stmt

  ! shift/reduce conflict for else_token resolved as shift
    period_token    reduce using rule 28 (if_stmt -> if_token cond then_token stmt .)
    semicolom_token reduce using rule 28 (if_stmt -> if_token cond then_token stmt .)
    end_token       reduce using rule 28 (if_stmt -> if_token cond then_token stmt .)
    else_token      shift and go to state 102

  ! else_token      [ reduce using rule 28 (if_stmt -> if_token cond then_token stmt .) ]


state 97

    (5) con_dec_cdr -> comma_token ident_token eql_token number_token . con_dec_cdr
    (5) con_dec_cdr -> . comma_token ident_token eql_token number_token con_dec_cdr
    (6) con_dec_cdr -> . empty
    (54) empty -> .

    comma_token     shift and go to state 38
    semicolom_token reduce using rule 54 (empty -> .)

    empty                          shift and go to state 39
    con_dec_cdr                    shift and go to state 103

state 98

    (13) proc_dec_cdr -> proc_token . ident_token semicolom_token block semicolom_token proc_dec_cdr

    ident_token     shift and go to state 104


state 99

    (11) proc_dec -> proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr .

    ident_token     reduce using rule 11 (proc_dec -> proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr .)
    call_token      reduce using rule 11 (proc_dec -> proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr .)
    begin_token     reduce using rule 11 (proc_dec -> proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr .)
    if_token        reduce using rule 11 (proc_dec -> proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr .)
    while_token     reduce using rule 11 (proc_dec -> proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr .)
    read_token      reduce using rule 11 (proc_dec -> proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr .)
    write_token     reduce using rule 11 (proc_dec -> proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr .)
    period_token    reduce using rule 11 (proc_dec -> proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr .)
    semicolom_token reduce using rule 11 (proc_dec -> proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr .)


state 100

    (14) proc_dec_cdr -> empty .

    ident_token     reduce using rule 14 (proc_dec_cdr -> empty .)
    call_token      reduce using rule 14 (proc_dec_cdr -> empty .)
    begin_token     reduce using rule 14 (proc_dec_cdr -> empty .)
    if_token        reduce using rule 14 (proc_dec_cdr -> empty .)
    while_token     reduce using rule 14 (proc_dec_cdr -> empty .)
    read_token      reduce using rule 14 (proc_dec_cdr -> empty .)
    write_token     reduce using rule 14 (proc_dec_cdr -> empty .)
    period_token    reduce using rule 14 (proc_dec_cdr -> empty .)
    semicolom_token reduce using rule 14 (proc_dec_cdr -> empty .)


state 101

    (26) begin_stmt_cdr -> semicolom_token stmt begin_stmt_cdr .

    end_token       reduce using rule 26 (begin_stmt_cdr -> semicolom_token stmt begin_stmt_cdr .)


state 102

    (29) if_stmt -> if_token cond then_token stmt else_token . stmt
    (15) stmt -> . assign_stmt
    (16) stmt -> . call_stmt
    (17) stmt -> . begin_stmt
    (18) stmt -> . if_stmt
    (19) stmt -> . while_stmt
    (20) stmt -> . read_stmt
    (21) stmt -> . write_stmt
    (22) stmt -> . empty
    (23) assign_stmt -> . ident_token become_token expr
    (24) call_stmt -> . call_token ident_token
    (25) begin_stmt -> . begin_token stmt begin_stmt_cdr end_token
    (28) if_stmt -> . if_token cond then_token stmt
    (29) if_stmt -> . if_token cond then_token stmt else_token stmt
    (30) while_stmt -> . while_token cond do_token stmt
    (31) read_stmt -> . read_token ident_token
    (32) write_stmt -> . write_token expr
    (54) empty -> .

    ident_token     shift and go to state 27
    call_token      shift and go to state 32
    begin_token     shift and go to state 20
    if_token        shift and go to state 22
    while_token     shift and go to state 19
    read_token      shift and go to state 30
    write_token     shift and go to state 33
    period_token    reduce using rule 54 (empty -> .)
    semicolom_token reduce using rule 54 (empty -> .)
    end_token       reduce using rule 54 (empty -> .)
    else_token      reduce using rule 54 (empty -> .)

    write_stmt                     shift and go to state 24
    begin_stmt                     shift and go to state 28
    if_stmt                        shift and go to state 29
    call_stmt                      shift and go to state 25
    read_stmt                      shift and go to state 18
    stmt                           shift and go to state 105
    assign_stmt                    shift and go to state 21
    while_stmt                     shift and go to state 31
    empty                          shift and go to state 23

state 103

    (5) con_dec_cdr -> comma_token ident_token eql_token number_token con_dec_cdr .

    semicolom_token reduce using rule 5 (con_dec_cdr -> comma_token ident_token eql_token number_token con_dec_cdr .)


state 104

    (13) proc_dec_cdr -> proc_token ident_token . semicolom_token block semicolom_token proc_dec_cdr

    semicolom_token shift and go to state 106


state 105

    (29) if_stmt -> if_token cond then_token stmt else_token stmt .

    period_token    reduce using rule 29 (if_stmt -> if_token cond then_token stmt else_token stmt .)
    semicolom_token reduce using rule 29 (if_stmt -> if_token cond then_token stmt else_token stmt .)
    end_token       reduce using rule 29 (if_stmt -> if_token cond then_token stmt else_token stmt .)
    else_token      reduce using rule 29 (if_stmt -> if_token cond then_token stmt else_token stmt .)


state 106

    (13) proc_dec_cdr -> proc_token ident_token semicolom_token . block semicolom_token proc_dec_cdr
    (2) block -> . con_dec var_dec proc_dec stmt
    (3) con_dec -> . const_token ident_token eql_token number_token con_dec_cdr semicolom_token
    (4) con_dec -> . empty
    (54) empty -> .

    const_token     shift and go to state 1
    var_token       reduce using rule 54 (empty -> .)
    proc_token      reduce using rule 54 (empty -> .)
    ident_token     reduce using rule 54 (empty -> .)
    call_token      reduce using rule 54 (empty -> .)
    begin_token     reduce using rule 54 (empty -> .)
    if_token        reduce using rule 54 (empty -> .)
    while_token     reduce using rule 54 (empty -> .)
    read_token      reduce using rule 54 (empty -> .)
    write_token     reduce using rule 54 (empty -> .)
    semicolom_token reduce using rule 54 (empty -> .)

    empty                          shift and go to state 3
    con_dec                        shift and go to state 4
    block                          shift and go to state 107

state 107

    (13) proc_dec_cdr -> proc_token ident_token semicolom_token block . semicolom_token proc_dec_cdr

    semicolom_token shift and go to state 108


state 108

    (13) proc_dec_cdr -> proc_token ident_token semicolom_token block semicolom_token . proc_dec_cdr
    (13) proc_dec_cdr -> . proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr
    (14) proc_dec_cdr -> . empty
    (54) empty -> .

    proc_token      shift and go to state 98
    ident_token     reduce using rule 54 (empty -> .)
    call_token      reduce using rule 54 (empty -> .)
    begin_token     reduce using rule 54 (empty -> .)
    if_token        reduce using rule 54 (empty -> .)
    while_token     reduce using rule 54 (empty -> .)
    read_token      reduce using rule 54 (empty -> .)
    write_token     reduce using rule 54 (empty -> .)
    period_token    reduce using rule 54 (empty -> .)
    semicolom_token reduce using rule 54 (empty -> .)

    empty                          shift and go to state 100
    proc_dec_cdr                   shift and go to state 109

state 109

    (13) proc_dec_cdr -> proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr .

    ident_token     reduce using rule 13 (proc_dec_cdr -> proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr .)
    call_token      reduce using rule 13 (proc_dec_cdr -> proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr .)
    begin_token     reduce using rule 13 (proc_dec_cdr -> proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr .)
    if_token        reduce using rule 13 (proc_dec_cdr -> proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr .)
    while_token     reduce using rule 13 (proc_dec_cdr -> proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr .)
    read_token      reduce using rule 13 (proc_dec_cdr -> proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr .)
    write_token     reduce using rule 13 (proc_dec_cdr -> proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr .)
    period_token    reduce using rule 13 (proc_dec_cdr -> proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr .)
    semicolom_token reduce using rule 13 (proc_dec_cdr -> proc_token ident_token semicolom_token block semicolom_token proc_dec_cdr .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for else_token in state 96 resolved as shift
